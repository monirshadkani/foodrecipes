{# templates/recipe/edit.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Modifier la recette{% endblock %}

{% block body %}
  <div class="container mx-auto p-8 bg-white rounded-lg shadow-lg mt-10">
        
    <div class="text-center mb-8">
        {% if recipe.user == app.user %}
            <h1 class="text-4xl font-extrabold text-gray-800">Modifier la recette</h1>
        {% else %}
            <h1 class="text-4xl font-extrabold text-gray-600">Visionner la recette</h1>
        {% endif %}
    </div>

    {{ form_start(form) }}
        <div class="space-y-6">
                <div class="form-group">
                    {{ form_row(form.label, {'attr': {'class': 'w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500'}}) }}
                </div>

                <div class="form-group">
                    {{ form_row(form.description, {'attr': {'class': 'w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500'}}) }}
                </div>

                <div class="form-group">
                    {{ form_row(form.duration, {'attr': {'class': 'w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500'}}) }}
                </div>

                <div class="form-group">
                    {{ form_row(form.personCount, {'attr': {'class': 'w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500'}}) }}
                </div>

                <div class="form-group">
                    {{ form_row(form.photo, {'attr': {'class': 'w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500'}}) }}
                </div>

                <div id="photo-preview" class="mt-4">
                    {% if recipe.photo is not empty %}
                        <img id="imageContainer" src="{{ asset(recipe.photo) }}" alt="Photo de la recette" class="max-w-xs mx-auto rounded-lg shadow-md" />
                    {% else %}
                        <img id="imageContainer" src="#" alt="Aucune image sélectionnée" class="max-w-xs mx-auto rounded-lg shadow-md" />
                    {% endif %}
                </div>

                <div id="recipe_ingredients1" class="space-y-4">
                    {{ form_row(form.recipeIngredients) }}
                </div>

                {% if recipe.user == app.user %}
                    <div class="flex justify-center mt-6 space-x-4">
                        <button type="button" id="add_ingredient" class="bg-green-600 text-white px-6 py-3 rounded-full shadow-lg hover:bg-green-500 transition transform hover:scale-105">
                            Ajouter un ingrédient
                        </button>
                        <button type="submit" class="bg-blue-600 text-white px-6 py-3 rounded-full shadow-lg hover:bg-blue-500 transition transform hover:scale-105">
                            Modifier la recette
                        </button>
                    </div>
                {% endif %}
            </div>
    {{ form_end(form) }}
    </div>

     {# JavaScript pour ajouter des ingrédients dynamiquement #}
    <script>
        var addButton = document.getElementById('add_ingredient');
        var container = document.getElementById('recipe_recipeIngredients');
        
        var prototype = document.getElementById('recipe_recipeIngredients').dataset.prototype;
      

        // Ajouter un bouton "Supprimer" pour chaque nouvel ingrédient
        function addRemoveButton(ingredientDiv) {
            var removeButton = document.createElement('button');
            removeButton.type = 'button';
            removeButton.textContent = 'Supprimer';
            removeButton.className = 'remove-ingredient';
            ingredientDiv.appendChild(removeButton);

            removeButton.addEventListener('click', function () {
                ingredientDiv.remove(); // Supprime le div contenant l'ingrédient
            });
        }

        document.querySelectorAll('div[id^="recipe_recipeIngredients_"]').forEach(function(childDiv) {
            var divParent = childDiv.parentElement; // Récupère le parent direct de chaque div
            addRemoveButton(divParent); // Applique la fonction addRemoveButton
            addDynamicUnitChange(divParent);
        });

        const e = new Event("change"); // Crée l'événement "change"
        const elements = document.querySelectorAll('select'); // Sélectionne tous les <select>
       

        elements.forEach(element => {
            element.dispatchEvent(e); // Dispatch l'événement pour chaque <select>
        });
        

        addButton.addEventListener('click', function() {
            var newIngredientForm = prototype.replace(/__name__/g, container.children.length);
            var div = document.createElement('div');
            div.innerHTML = newIngredientForm;
            addRemoveButton(div);
            container.appendChild(div);
            addDynamicUnitChange(div);
        });

        function addDynamicUnitChange(ingredientDiv){
            
            const select = ingredientDiv.querySelector('select'); // Cherche le premier <select> dans la div
                if (select) {
                    select.onchange = function () {
                        
                        const selectedOption = select.options[select.selectedIndex];
                        const unit = selectedOption.getAttribute('data-unit');
                        
                        if (selectedOption.value) {
                            const unitDisplay = ingredientDiv.querySelector('[name*="unitDisplay"]');
                            unitDisplay.value = unit
                        }
                        else
                        {
                           unitDisplay.value = ''; 
                        }
                    };
                }
                    
        }


        //Gestion de limage -- ATTENTION DIFFERENT DUFICHIER NEW

       // Sélectionner l'élément input de type "file" et l'élément img pour l'aperçu
    var inputFile = document.querySelector('input[type="file"]');
    var imageContainer = document.getElementById('imageContainer');

    // Fonction de prévisualisation de l'image
    inputFile.addEventListener('change', function(event) {
        var file = event.target.files[0]; // Récupérer le fichier sélectionné
        if (file) {
            var reader = new FileReader();
            
            reader.onload = function(e) {
                // Mettre à jour l'élément <img> avec l'URL du fichier sélectionné
                imageContainer.src = e.target.result;
                imageContainer.style.display = 'block'; // Afficher l'image (si elle était cachée)
            };
            
            reader.readAsDataURL(file); // Lire le fichier en tant qu'URL de données
        }
    });
    </script>
{% endblock %}
